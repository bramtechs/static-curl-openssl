cmake_minimum_required(VERSION 3.6)
project(static-curl-openssl)
set(CMAKE_C_STANDARD 99)

message("Processor used ${CMAKE_SYSTEM_PROCESSOR}")
if(CMAKE_SYSTEM_PROCESSOR STREQUAL "aarch64")
    set(CURL_LIB_PATH ${CMAKE_CURRENT_SOURCE_DIR}/arm64-v8a)
elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "armv7-a")
    set(CURL_LIB_PATH ${CMAKE_CURRENT_SOURCE_DIR}/armeabi-v7a)
elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" OR CMAKE_SYSTEM_PROCESSOR MATCHES "amd64")
    set(CURL_LIB_PATH ${CMAKE_CURRENT_SOURCE_DIR}/x86_64)
elseif(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86" OR CMAKE_SYSTEM_PROCESSOR MATCHES "i686")
    set(CURL_LIB_PATH ${CMAKE_CURRENT_SOURCE_DIR}/x86)
else()
    message(FATAL_ERROR "Unknown architecture ${CMAKE_SYSTEM_PROCESSOR}!")
endif()

add_library(${PROJECT_NAME} INTERFACE)
target_link_libraries(${PROJECT_NAME} INTERFACE
    ${CURL_LIB_PATH}/libcurl.a
    ${CURL_LIB_PATH}/libcrypto.a
    ${CURL_LIB_PATH}/libssl.a
)

set(STATIC_CURL_OPENSSL_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/include PARENT_SCOPE)
message("Including headers ${STATIC_CURL_OPENSSL_HEADERS}")
target_include_directories(${PROJECT_NAME} INTERFACE ${STATIC_CURL_OPENSSL_HEADERS})
